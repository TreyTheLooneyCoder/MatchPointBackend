// <auto-generated />
using System;
using MatchPointBackend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatchPointBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250411170854_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatchPointBackend.Models.AddLocationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddLocationModel");
                });

            modelBuilder.Entity("MatchPointBackend.Models.AmenityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourtAmenityModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourtAmenityModelId");

                    b.ToTable("AmenityModel");
                });

            modelBuilder.Entity("MatchPointBackend.Models.CommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommentModel");
                });

            modelBuilder.Entity("MatchPointBackend.Models.ConditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourtConditionModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourtConditionModelId");

                    b.ToTable("ConditionModel");
                });

            modelBuilder.Entity("MatchPointBackend.Models.CourtAmenityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("CourtAmenityModel");
                });

            modelBuilder.Entity("MatchPointBackend.Models.CourtConditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("CourtConditionModel");
                });

            modelBuilder.Entity("MatchPointBackend.Models.CourtModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AmenitiesId")
                        .HasColumnType("int");

                    b.Property<int>("CommentsId")
                        .HasColumnType("int");

                    b.Property<int>("ConditionId")
                        .HasColumnType("int");

                    b.Property<string>("CourtName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourtRating")
                        .HasColumnType("int");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<int>("NewLocationsId")
                        .HasColumnType("int");

                    b.Property<int>("SafetyRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AmenitiesId");

                    b.HasIndex("CommentsId");

                    b.HasIndex("ConditionId");

                    b.HasIndex("NewLocationsId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MatchPointBackend.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MatchPointBackend.Models.AmenityModel", b =>
                {
                    b.HasOne("MatchPointBackend.Models.CourtAmenityModel", null)
                        .WithMany("Amenities")
                        .HasForeignKey("CourtAmenityModelId");
                });

            modelBuilder.Entity("MatchPointBackend.Models.ConditionModel", b =>
                {
                    b.HasOne("MatchPointBackend.Models.CourtConditionModel", null)
                        .WithMany("Conditions")
                        .HasForeignKey("CourtConditionModelId");
                });

            modelBuilder.Entity("MatchPointBackend.Models.CourtModel", b =>
                {
                    b.HasOne("MatchPointBackend.Models.CourtAmenityModel", "Amenities")
                        .WithMany()
                        .HasForeignKey("AmenitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchPointBackend.Models.CommentModel", "Comments")
                        .WithMany()
                        .HasForeignKey("CommentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchPointBackend.Models.CourtConditionModel", "Condition")
                        .WithMany()
                        .HasForeignKey("ConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatchPointBackend.Models.AddLocationModel", "NewLocations")
                        .WithMany()
                        .HasForeignKey("NewLocationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Amenities");

                    b.Navigation("Comments");

                    b.Navigation("Condition");

                    b.Navigation("NewLocations");
                });

            modelBuilder.Entity("MatchPointBackend.Models.CourtAmenityModel", b =>
                {
                    b.Navigation("Amenities");
                });

            modelBuilder.Entity("MatchPointBackend.Models.CourtConditionModel", b =>
                {
                    b.Navigation("Conditions");
                });
#pragma warning restore 612, 618
        }
    }
}
